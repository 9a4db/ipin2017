[General]
debug-on-errors = true
**.statistic-recording = false
**.scalar-recording = false
**.vector-recording = false

**.bitrate = 1Mbps
**.communicationRange = 750m
**.displayCommunicationRange = true
**.radioMedium.propagation.propagationSpeed = 299792458mps

*.visualizer.mediumVisualizer.displaySignals = true

###########################################################
#	Common settings
##########################################################
[Config Common_Stationary]
network = StationaryNetwork
sim-time-limit = 30s
# TODO Fix grid setting, so first node goes at [150,150], next at [250,150].
#      It will then allign with moving node paths.
**.mobilesNumber = 25
**.Mobiles[*].mobility.numHosts = 25
**.Mobiles[*].mobility.marginX = 125m
**.Mobiles[*].mobility.marginY = 100m
**.Mobiles[*].mobility.constraintAreaMinX = 50m
**.Mobiles[*].mobility.constraintAreaMinY = 0m
**.Mobiles[*].mobility.constraintAreaMaxX = 700m
**.Mobiles[*].mobility.constraintAreaMaxY = 600m

[Config Common_Moving]
network = MovingNetwork
**.Mobile1.**.initFromDisplayString = false
sim-time-limit =            ${ simulationTime = 288s,  144s,   72s,    36s }
**.Mobile1.mobility.speed = ${          speed = 5kmph, 10kmph, 20kmph, 40kmph ! simulationTime}
# Move direction                   # UP -> DOWN                       # LEFT -> RIGHT               # LEFT-TOP -> RIGHT-BOTTOM
**.Mobile1.**.initialX =    ${ x = 100m,  200m,  300m,  400m,  500m,  100m, 100m, 100m, 100m, 100m, 110m }
**.Mobile1.**.initialY =    ${ y = 100m,  100m,  100m,  100m,  100m,  100m, 200m, 300m, 400m, 500m, 110m  ! x }
**.Mobile1.mobility.angle = ${     90deg, 90deg, 90deg, 90deg, 90deg, 0deg, 0deg, 0deg, 0deg, 0deg, 45deg ! x } 

[Config Common_Perfect_Clock]
**.clockType = "NoneDrift"

[Config Common_Imperfect_Clock]
seed-set = ${ seedNo = 1, 2, 3 }
**.clockType = "BoundedDriftVariation"
**.drift_distribution = uniform( -${ drift = 10e-8, 1e-6, 2e-6, 5e-6, 10e-6, 20e-6 }, ${ drift } )

[Config Common_TDoA]
**.Anchor1.applicationType = "TDoAAnchorRangingApplication"
**.Anchor1.application.broadcastBeaconDelay = 1s

**.Anchor2.applicationType = "TDoAAnchorRangingApplication"
**.Anchor2.application.echoAnchorAddress = "DE-AD-BE-EF-10-01"

**.Anchor3.applicationType = "TDoAAnchorRangingApplication"
**.Anchor3.application.echoAnchorAddress = "DE-AD-BE-EF-10-02"

**.Mobile*.applicationType = "TDoAMobileRangingApplication"

[Config Common_Whistle]
**.Anchor1.applicationType = "WhistleAnchorRangingApplication"
**.Anchor1.application.isBaseAnchor = true

**.Anchor2.applicationType = "WhistleAnchorRangingApplication"

**.Anchor3.applicationType = "WhistleAnchorRangingApplication"

**.Mobile1.applicationType = "WhistleMobileRangingApplication"
**.Mobile1.application.frameTransmissionInterval = 1s

###########################################################
#	Proposed method
##########################################################
[Config TDoA_stationary_perfect_clock]
extends = Common_Stationary, Common_TDoA, Common_Perfect_Clock
**.Mobiles[*].application.resultsFileName = "tdoa_perf_0kmph"

[Config TDoA_moving_perfect_clock]
extends = Common_Moving, Common_TDoA, Common_Perfect_Clock
**.Mobile1.application.resultsFileName = "tdoa_perf_${speed}"

[Config Whistle_moving_perfect_clock]
extends = Common_Moving, Common_Whistle, Common_Perfect_Clock
**.Anchor*.application.resultsFileName = "whistle_perf_${speed}_${x}_${y}"

###########################################################
##	Imperfect clock
###########################################################
[Config TDoA_stationary_imperfect_clock]
extends = Common_Stationary, Common_TDoA, Common_Imperfect_Clock
**.Mobiles[*].application.resultsFileName = "tdoa_imperf_" + string(double(${drift})) + "_0kmph"

[Config TDoA_moving_imperfect_clock]
extends = Common_Moving, Common_TDoA, Common_Imperfect_Clock
**.Mobile1.application.resultsFileName = "tdoa_imperf_" + string(double(${drift})) + "_${speed}_${seedNo}seed"

[Config Whistle_moving_imperfect_clock]
extends = Common_Moving, Common_Whistle, Common_Imperfect_Clock
**.Anchor*.application.resultsFileName = "whistle_imperf_" + string(double(${drift})) + "_${speed}_${x}_${y}_${seedNo}seed"
